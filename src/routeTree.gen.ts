/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProfileImport } from './routes/_profile'
import { Route as PortfolioImport } from './routes/_portfolio'
import { Route as AuthImport } from './routes/_auth'
import { Route as AppImport } from './routes/_app'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const ProfileSearchLazyImport = createFileRoute('/_profile/search')()
const ProfileProfileLazyImport = createFileRoute('/_profile/profile')()
const ProfileNotificationsLazyImport = createFileRoute(
  '/_profile/notifications',
)()
const PortfolioTransactionsLazyImport = createFileRoute(
  '/_portfolio/transactions',
)()
const PortfolioStatisticsLazyImport = createFileRoute(
  '/_portfolio/statistics',
)()
const PortfolioDetailsLazyImport = createFileRoute('/_portfolio/details')()
const PortfolioAssetsLazyImport = createFileRoute('/_portfolio/assets')()
const AuthRegisterLazyImport = createFileRoute('/_auth/register')()
const AuthLoginLazyImport = createFileRoute('/_auth/login')()
const AppNewsLazyImport = createFileRoute('/_app/news')()
const AppMoreLazyImport = createFileRoute('/_app/more')()
const AppMarketsLazyImport = createFileRoute('/_app/markets')()

// Create/Update Routes

const ProfileRoute = ProfileImport.update({
  id: '/_profile',
  getParentRoute: () => rootRoute,
} as any)

const PortfolioRoute = PortfolioImport.update({
  id: '/_portfolio',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const ProfileSearchLazyRoute = ProfileSearchLazyImport.update({
  id: '/search',
  path: '/search',
  getParentRoute: () => ProfileRoute,
} as any).lazy(() =>
  import('./routes/_profile/search.lazy').then((d) => d.Route),
)

const ProfileProfileLazyRoute = ProfileProfileLazyImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => ProfileRoute,
} as any).lazy(() =>
  import('./routes/_profile/profile.lazy').then((d) => d.Route),
)

const ProfileNotificationsLazyRoute = ProfileNotificationsLazyImport.update({
  id: '/notifications',
  path: '/notifications',
  getParentRoute: () => ProfileRoute,
} as any).lazy(() =>
  import('./routes/_profile/notifications.lazy').then((d) => d.Route),
)

const PortfolioTransactionsLazyRoute = PortfolioTransactionsLazyImport.update({
  id: '/transactions',
  path: '/transactions',
  getParentRoute: () => PortfolioRoute,
} as any).lazy(() =>
  import('./routes/_portfolio/transactions.lazy').then((d) => d.Route),
)

const PortfolioStatisticsLazyRoute = PortfolioStatisticsLazyImport.update({
  id: '/statistics',
  path: '/statistics',
  getParentRoute: () => PortfolioRoute,
} as any).lazy(() =>
  import('./routes/_portfolio/statistics.lazy').then((d) => d.Route),
)

const PortfolioDetailsLazyRoute = PortfolioDetailsLazyImport.update({
  id: '/details',
  path: '/details',
  getParentRoute: () => PortfolioRoute,
} as any).lazy(() =>
  import('./routes/_portfolio/details.lazy').then((d) => d.Route),
)

const PortfolioAssetsLazyRoute = PortfolioAssetsLazyImport.update({
  id: '/assets',
  path: '/assets',
  getParentRoute: () => PortfolioRoute,
} as any).lazy(() =>
  import('./routes/_portfolio/assets.lazy').then((d) => d.Route),
)

const AuthRegisterLazyRoute = AuthRegisterLazyImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import('./routes/_auth/register.lazy').then((d) => d.Route),
)

const AuthLoginLazyRoute = AuthLoginLazyImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./routes/_auth/login.lazy').then((d) => d.Route))

const AppNewsLazyRoute = AppNewsLazyImport.update({
  id: '/news',
  path: '/news',
  getParentRoute: () => AppRoute,
} as any).lazy(() => import('./routes/_app/news.lazy').then((d) => d.Route))

const AppMoreLazyRoute = AppMoreLazyImport.update({
  id: '/more',
  path: '/more',
  getParentRoute: () => AppRoute,
} as any).lazy(() => import('./routes/_app/more.lazy').then((d) => d.Route))

const AppMarketsLazyRoute = AppMarketsLazyImport.update({
  id: '/markets',
  path: '/markets',
  getParentRoute: () => AppRoute,
} as any).lazy(() => import('./routes/_app/markets.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_portfolio': {
      id: '/_portfolio'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PortfolioImport
      parentRoute: typeof rootRoute
    }
    '/_profile': {
      id: '/_profile'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
    '/_app/markets': {
      id: '/_app/markets'
      path: '/markets'
      fullPath: '/markets'
      preLoaderRoute: typeof AppMarketsLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/more': {
      id: '/_app/more'
      path: '/more'
      fullPath: '/more'
      preLoaderRoute: typeof AppMoreLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/news': {
      id: '/_app/news'
      path: '/news'
      fullPath: '/news'
      preLoaderRoute: typeof AppNewsLazyImport
      parentRoute: typeof AppImport
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginLazyImport
      parentRoute: typeof AuthImport
    }
    '/_auth/register': {
      id: '/_auth/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof AuthRegisterLazyImport
      parentRoute: typeof AuthImport
    }
    '/_portfolio/assets': {
      id: '/_portfolio/assets'
      path: '/assets'
      fullPath: '/assets'
      preLoaderRoute: typeof PortfolioAssetsLazyImport
      parentRoute: typeof PortfolioImport
    }
    '/_portfolio/details': {
      id: '/_portfolio/details'
      path: '/details'
      fullPath: '/details'
      preLoaderRoute: typeof PortfolioDetailsLazyImport
      parentRoute: typeof PortfolioImport
    }
    '/_portfolio/statistics': {
      id: '/_portfolio/statistics'
      path: '/statistics'
      fullPath: '/statistics'
      preLoaderRoute: typeof PortfolioStatisticsLazyImport
      parentRoute: typeof PortfolioImport
    }
    '/_portfolio/transactions': {
      id: '/_portfolio/transactions'
      path: '/transactions'
      fullPath: '/transactions'
      preLoaderRoute: typeof PortfolioTransactionsLazyImport
      parentRoute: typeof PortfolioImport
    }
    '/_profile/notifications': {
      id: '/_profile/notifications'
      path: '/notifications'
      fullPath: '/notifications'
      preLoaderRoute: typeof ProfileNotificationsLazyImport
      parentRoute: typeof ProfileImport
    }
    '/_profile/profile': {
      id: '/_profile/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileProfileLazyImport
      parentRoute: typeof ProfileImport
    }
    '/_profile/search': {
      id: '/_profile/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof ProfileSearchLazyImport
      parentRoute: typeof ProfileImport
    }
  }
}

// Create and export the route tree

interface AppRouteChildren {
  AppMarketsLazyRoute: typeof AppMarketsLazyRoute
  AppMoreLazyRoute: typeof AppMoreLazyRoute
  AppNewsLazyRoute: typeof AppNewsLazyRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppMarketsLazyRoute: AppMarketsLazyRoute,
  AppMoreLazyRoute: AppMoreLazyRoute,
  AppNewsLazyRoute: AppNewsLazyRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

interface AuthRouteChildren {
  AuthLoginLazyRoute: typeof AuthLoginLazyRoute
  AuthRegisterLazyRoute: typeof AuthRegisterLazyRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLoginLazyRoute: AuthLoginLazyRoute,
  AuthRegisterLazyRoute: AuthRegisterLazyRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface PortfolioRouteChildren {
  PortfolioAssetsLazyRoute: typeof PortfolioAssetsLazyRoute
  PortfolioDetailsLazyRoute: typeof PortfolioDetailsLazyRoute
  PortfolioStatisticsLazyRoute: typeof PortfolioStatisticsLazyRoute
  PortfolioTransactionsLazyRoute: typeof PortfolioTransactionsLazyRoute
}

const PortfolioRouteChildren: PortfolioRouteChildren = {
  PortfolioAssetsLazyRoute: PortfolioAssetsLazyRoute,
  PortfolioDetailsLazyRoute: PortfolioDetailsLazyRoute,
  PortfolioStatisticsLazyRoute: PortfolioStatisticsLazyRoute,
  PortfolioTransactionsLazyRoute: PortfolioTransactionsLazyRoute,
}

const PortfolioRouteWithChildren = PortfolioRoute._addFileChildren(
  PortfolioRouteChildren,
)

interface ProfileRouteChildren {
  ProfileNotificationsLazyRoute: typeof ProfileNotificationsLazyRoute
  ProfileProfileLazyRoute: typeof ProfileProfileLazyRoute
  ProfileSearchLazyRoute: typeof ProfileSearchLazyRoute
}

const ProfileRouteChildren: ProfileRouteChildren = {
  ProfileNotificationsLazyRoute: ProfileNotificationsLazyRoute,
  ProfileProfileLazyRoute: ProfileProfileLazyRoute,
  ProfileSearchLazyRoute: ProfileSearchLazyRoute,
}

const ProfileRouteWithChildren =
  ProfileRoute._addFileChildren(ProfileRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '': typeof ProfileRouteWithChildren
  '/markets': typeof AppMarketsLazyRoute
  '/more': typeof AppMoreLazyRoute
  '/news': typeof AppNewsLazyRoute
  '/login': typeof AuthLoginLazyRoute
  '/register': typeof AuthRegisterLazyRoute
  '/assets': typeof PortfolioAssetsLazyRoute
  '/details': typeof PortfolioDetailsLazyRoute
  '/statistics': typeof PortfolioStatisticsLazyRoute
  '/transactions': typeof PortfolioTransactionsLazyRoute
  '/notifications': typeof ProfileNotificationsLazyRoute
  '/profile': typeof ProfileProfileLazyRoute
  '/search': typeof ProfileSearchLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '': typeof ProfileRouteWithChildren
  '/markets': typeof AppMarketsLazyRoute
  '/more': typeof AppMoreLazyRoute
  '/news': typeof AppNewsLazyRoute
  '/login': typeof AuthLoginLazyRoute
  '/register': typeof AuthRegisterLazyRoute
  '/assets': typeof PortfolioAssetsLazyRoute
  '/details': typeof PortfolioDetailsLazyRoute
  '/statistics': typeof PortfolioStatisticsLazyRoute
  '/transactions': typeof PortfolioTransactionsLazyRoute
  '/notifications': typeof ProfileNotificationsLazyRoute
  '/profile': typeof ProfileProfileLazyRoute
  '/search': typeof ProfileSearchLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/_app': typeof AppRouteWithChildren
  '/_auth': typeof AuthRouteWithChildren
  '/_portfolio': typeof PortfolioRouteWithChildren
  '/_profile': typeof ProfileRouteWithChildren
  '/_app/markets': typeof AppMarketsLazyRoute
  '/_app/more': typeof AppMoreLazyRoute
  '/_app/news': typeof AppNewsLazyRoute
  '/_auth/login': typeof AuthLoginLazyRoute
  '/_auth/register': typeof AuthRegisterLazyRoute
  '/_portfolio/assets': typeof PortfolioAssetsLazyRoute
  '/_portfolio/details': typeof PortfolioDetailsLazyRoute
  '/_portfolio/statistics': typeof PortfolioStatisticsLazyRoute
  '/_portfolio/transactions': typeof PortfolioTransactionsLazyRoute
  '/_profile/notifications': typeof ProfileNotificationsLazyRoute
  '/_profile/profile': typeof ProfileProfileLazyRoute
  '/_profile/search': typeof ProfileSearchLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/markets'
    | '/more'
    | '/news'
    | '/login'
    | '/register'
    | '/assets'
    | '/details'
    | '/statistics'
    | '/transactions'
    | '/notifications'
    | '/profile'
    | '/search'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/markets'
    | '/more'
    | '/news'
    | '/login'
    | '/register'
    | '/assets'
    | '/details'
    | '/statistics'
    | '/transactions'
    | '/notifications'
    | '/profile'
    | '/search'
  id:
    | '__root__'
    | '/'
    | '/_app'
    | '/_auth'
    | '/_portfolio'
    | '/_profile'
    | '/_app/markets'
    | '/_app/more'
    | '/_app/news'
    | '/_auth/login'
    | '/_auth/register'
    | '/_portfolio/assets'
    | '/_portfolio/details'
    | '/_portfolio/statistics'
    | '/_portfolio/transactions'
    | '/_profile/notifications'
    | '/_profile/profile'
    | '/_profile/search'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AppRoute: typeof AppRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
  PortfolioRoute: typeof PortfolioRouteWithChildren
  ProfileRoute: typeof ProfileRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AppRoute: AppRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
  PortfolioRoute: PortfolioRouteWithChildren,
  ProfileRoute: ProfileRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_app",
        "/_auth",
        "/_portfolio",
        "/_profile"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/markets",
        "/_app/more",
        "/_app/news"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/login",
        "/_auth/register"
      ]
    },
    "/_portfolio": {
      "filePath": "_portfolio.tsx",
      "children": [
        "/_portfolio/assets",
        "/_portfolio/details",
        "/_portfolio/statistics",
        "/_portfolio/transactions"
      ]
    },
    "/_profile": {
      "filePath": "_profile.tsx",
      "children": [
        "/_profile/notifications",
        "/_profile/profile",
        "/_profile/search"
      ]
    },
    "/_app/markets": {
      "filePath": "_app/markets.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/more": {
      "filePath": "_app/more.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/news": {
      "filePath": "_app/news.lazy.tsx",
      "parent": "/_app"
    },
    "/_auth/login": {
      "filePath": "_auth/login.lazy.tsx",
      "parent": "/_auth"
    },
    "/_auth/register": {
      "filePath": "_auth/register.lazy.tsx",
      "parent": "/_auth"
    },
    "/_portfolio/assets": {
      "filePath": "_portfolio/assets.lazy.tsx",
      "parent": "/_portfolio"
    },
    "/_portfolio/details": {
      "filePath": "_portfolio/details.lazy.tsx",
      "parent": "/_portfolio"
    },
    "/_portfolio/statistics": {
      "filePath": "_portfolio/statistics.lazy.tsx",
      "parent": "/_portfolio"
    },
    "/_portfolio/transactions": {
      "filePath": "_portfolio/transactions.lazy.tsx",
      "parent": "/_portfolio"
    },
    "/_profile/notifications": {
      "filePath": "_profile/notifications.lazy.tsx",
      "parent": "/_profile"
    },
    "/_profile/profile": {
      "filePath": "_profile/profile.lazy.tsx",
      "parent": "/_profile"
    },
    "/_profile/search": {
      "filePath": "_profile/search.lazy.tsx",
      "parent": "/_profile"
    }
  }
}
ROUTE_MANIFEST_END */
